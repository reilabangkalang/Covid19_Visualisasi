# -*- coding: utf-8 -*-
"""Covid19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dv409lrQ-wkAaK_oqfRuIOdPX0xLQMyU
"""

import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import datetime as datetime
import matplotlib.dates as dates

import datetime
from datetime import date

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('/content/drive/My Drive/Data/Covid19/covid_19.csv')
df.head()

df.shape

df.columns

print('-->Location<---')
df.Location.unique()

date2=[]
for item in df['Date']:
    item2=item.split('/')
    month=int(item2[0])
    day=int(item2[1])
    year=int(item2[2])
    date2+=[datetime.date(year,month,day)]
df['Date']=date2
df['Date'] = pd.to_datetime(df['Date'])

data = df.drop(['City or Regency','Location ISO Code',
                'Province','Country','Continent','Island','Time Zone','Special Status',
                'Total Regencies','Total Cities','Total Districts','Total Urban Villages',
                'Total Rural Villages','New Cases per Million','Total Cases per Million',
                'New Deaths per Million','Total Deaths per Million','Case Fatality Rate',
                'Case Recovered Rate','Growth Factor of New Cases','Growth Factor of New Deaths'], axis=1)

data.fillna(0)
data.head()

data.info()

data.shape

df = data[data['Location Level'] != 'Country']
df.head()

df_clean = df.drop_duplicates(subset='Location', keep='last')
df_clean.tail()

df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Cases'], ascending=True)

"""Provinsi Kasus Tertinggi"""

plt.figure(figsize=(12,9))
plt.bar(df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Cases'], ascending=False)['Location'].values[:5], 
        df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Cases'], ascending=False)['Total Cases'].values[:5])
plt.title('5 Province Total Kasus Covid Terbanyak', fontsize=14)
plt.xlabel('Province')
plt.show()

"""### Kasus Kematian Terbanyak"""

plt.figure(figsize=(12,9))
sns.barplot(df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Deaths'], ascending=False)['Location'].values[:5],  
            df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Deaths'], ascending=False)['Total Deaths'].values[:5])
plt.title('5 Provinsi Dengan Total Kematian Paling Banyak', fontsize=25)
plt.xlabel('Provinsi', fontsize=15)
plt.show()

"""### Kasus Kesembuhan Terbanyak"""

plt.figure(figsize=(12,9))
sns.barplot(df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Recovered'], ascending=False)['Location'].values[:5],  
            df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Recovered'], ascending=False)['Total Recovered'].values[:5])
plt.title('5 Provinsi dengan Total Kesembuhan Terbanyak', fontsize=25)
plt.xlabel('Provinsi', fontsize=15)
plt.show()

"""### Total Kasus Aktif Terbanyak"""

plt.figure(figsize=(12,9))
sns.barplot(df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Active Cases'], ascending=False)['Location'].values[:5],  
            df_clean[df_clean.Location != 'Indonesia'].sort_values(by=['Total Active Cases'], ascending=False)['Total Active Cases'].values[:5])
plt.title('5 Provinsi dengan Total Kasus Aktif', fontsize=25)
plt.xlabel('Provinsi', fontsize=15)
plt.show()

